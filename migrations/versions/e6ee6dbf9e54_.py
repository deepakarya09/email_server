"""empty message

Revision ID: e6ee6dbf9e54
Revises: 
Create Date: 2021-10-22 20:42:25.627341

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e6ee6dbf9e54'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('first_name', sa.String(length=20), nullable=False),
    sa.Column('last_name', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('login_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('brands',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('fqdn', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('facebook_url', sa.String(length=1000), nullable=True),
    sa.Column('twitter_url', sa.String(length=1000), nullable=True),
    sa.Column('instagram_url', sa.String(length=1000), nullable=True),
    sa.Column('logo', sa.String(length=1000), nullable=True),
    sa.Column('api_key', sa.String(length=1000), nullable=False),
    sa.Column('double_opt', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BIGINT(), nullable=True),
    sa.Column('updated_at', sa.BIGINT(), nullable=True),
    sa.Column('physical_add', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fqdn'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_credentials',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_sessions',
    sa.Column('session_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('token', sa.String(length=256), nullable=False),
    sa.Column('expires_at', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_table('branduserrelation',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('brand_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'brand_id')
    )
    op.create_table('services',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('brand_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.BIGINT(), nullable=True),
    sa.Column('updated_at', sa.BIGINT(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('subscribers',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=200), nullable=False),
    sa.Column('system_type', sa.String(length=200), nullable=False),
    sa.Column('confirmation', sa.Boolean(), nullable=True),
    sa.Column('submitted_at', sa.BIGINT(), nullable=True),
    sa.Column('ip_address', sa.String(length=200), nullable=False),
    sa.Column('service_type', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['service_type'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('ip_address'),
    sa.UniqueConstraint('status'),
    sa.UniqueConstraint('system_type')
    )
    op.create_table('brandsubscribersrelation',
    sa.Column('subscribers_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('brand_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], ),
    sa.ForeignKeyConstraint(['subscribers_id'], ['subscribers.id'], ),
    sa.PrimaryKeyConstraint('subscribers_id', 'brand_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('brandsubscribersrelation')
    op.drop_table('subscribers')
    op.drop_table('services')
    op.drop_table('branduserrelation')
    op.drop_table('user_sessions')
    op.drop_table('user_credentials')
    op.drop_table('brands')
    op.drop_table('users')
    # ### end Alembic commands ###
